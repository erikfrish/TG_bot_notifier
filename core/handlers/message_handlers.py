import logging
import configparser
import time
from aiogram import Bot, Dispatcher, types
import asyncio
from core.utils.pg_connect import is_user_registered


import json

from core.keyboards.reply import reply_keyboard, loc_tel_poll_keyboard, get_reply_keyboard, get_user_contact_keyboard
# from core.utils.pg_connect import is_user_registered

# config = configparser.ConfigParser()  # —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç–∞ –ø–∞—Ä—Å–µ—Ä–∞ conf.ini
# config.read("tg_bot/conf.ini")  # —á–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ conf.ini
# API_TOKEN = config['Conf']['API_TOKEN']
# REGULAR_TEXT = config['Conf']['REGULAR_TEXT']
# NOTIFICATION_TEXT = config['Conf']['NOTIFICATION_TEXT']
# HELP_COMMAND = config['Conf']['HELP_COMMAND']

# FIXME –ø–µ—Ä–µ–∫–∏–Ω—É—Ç—å —Ç–µ–∫—Å—Ç –≤ .env, —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–º
HELP_COMMAND = """–ü—Ä–∏–≤–µ—Ç –¥–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!
–Ø —Å—É—â–µ—Å—Ç–≤—É—é, —á—Ç–æ–±—ã –∏–Ω–æ–≥–¥–∞ —Å–æ–æ–±—â–∞—Ç—å —Ç–µ–±–µ –æ —á–µ–º-–Ω–∏–±—É–¥—å –¥–æ–≤–æ–ª—å–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ, —Ç–∞–∫ —á—Ç–æ –Ω–µ –æ—Ç–∫–ª—é—á–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üòâ

–ï—Å–ª–∏ —á—Ç–æ, —è —É–º–µ—é —Ç–æ–ª—å–∫–æ —ç—Ç–æ, —Ç–∞–∫ —á—Ç–æ –∫—Ä–∞–π–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –±–µ—Å–µ–¥—ã, —É–≤—ã, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. 
–í–ø—Ä–æ—á–µ–º, —è –ª—é–±–ª—é —Å—Ç–∏–∫–µ—Ä—ã, —Ç–∞–∫ —á—Ç–æ —Å–∞–º—ã–µ –æ—Ç–±–∏—Ç—ã–µ –º–æ–∂–µ—à—å –ø—Ä–∏—Å—ã–ª–∞—Ç—åüòâ

–í–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
/start  -- –ø–µ—Ä–≤–æ–µ —á—Ç–æ —Ç—ã –º–Ω–µ –Ω–∞–ø–∏—à–µ—à—å
/help -- —Ä–∞—Å—Å–∫–∞–∂—É –∫—Ç–æ —è –∏ —á—Ç–æ —É–º–µ—é
/–ø–æ–∫–∞ —ç—Ç–æ –≤—Å–µ, –Ω–æ –º–æ–∂–µ—Ç —á—Ç–æ –µ—â–µ –¥–æ–±–∞–≤–ª—é
"""


async def start_handler(message: types.Message):
    user_id = message.from_user.id
    user_full_name = message.from_user.full_name
    user_name = message.from_user.first_name
    text = message.text
    logging.info(
        f'{user_id=} {user_full_name=} {time.asctime()} {user_name} {text}')
    print(f'{user_id=} {user_full_name=} {time.asctime()} {user_name} {text}')
    await asyncio.sleep(10)

    # with open("/Users/mac/Developer/GitHub/Project_Diplom/tg_bot/message.json", "w") as o:
    #     o.write(json.dumps(message.dict(), default=str))
    if (not await is_user_registered(message.from_user.id)):
        await message.answer(f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {user_full_name}!\n\n–î–∞–≤–∞–π—Ç–µ —Å –≤–∞–º–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É ‚Üì\n\n(–Ω–∞–∂–∏–º–∞—è –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É –≤—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)", reply_markup=get_user_contact_keyboard())
        await message.delete()
    else:
        await message.answer(f"{user_full_name}, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —Ç–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π \n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ —Å–ø—Ä–∞–≤–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help")
        await message.delete()


async def help_handler(message: types.Message, bot: Bot):
    await message.reply(HELP_COMMAND)
    await message.delete()


async def sticker_echo_handler(message: types.sticker, bot: Bot):
    # print("sticker_echo_handler")
    await bot.send_sticker(message.from_user.id, message.sticker.file_id)


async def echo_handler(message: types.Message, bot: Bot):
    user_id = message.from_user.id
    user_full_name = message.from_user.full_name
    text = message.text
    await message.answer(text=text, reply_markup=types.ReplyKeyboardRemove())
    print(f'{user_id=} {user_full_name=} {time.asctime()} {text=}')


async def edited_message_handler(message: types.Message, bot: Bot):
    await message.answer("–ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, —ç—Ç–æ —Å–±–∏–≤–∞–µ—Ç!")
    await message.delete()
